"""
–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Sci.Net.Node
–ù–∞—É—á–Ω–∞—è —Å–µ—Ç—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏ —á–µ—Ä–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É
"""

import streamlit as st
import os
from datetime import datetime, date
import pandas as pd

# –ò–º–ø–æ—Ä—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
from components.email_handler import EmailHandler  
from components.ris_parser import RISParser
from components.sidebar import SidebarPanel
from components.main_panel import MainPanel
from utils.doi_utils import DOIUtils
from utils.openalex_utils import OpenAlexUtils
from config import APP_CONFIG

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title=APP_CONFIG["title"],
    page_icon="üî¨",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .stApp {
        max-width: 1200px;
        margin: 0 auto;
    }
    .publication-card {
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 15px;
        margin: 10px 0;
        background-color: #f9f9f9;
    }
    .metric-container {
        background-color: #e6f3ff;
        padding: 10px;
        border-radius: 5px;
        margin: 5px 0;
    }
</style>
""", unsafe_allow_html=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'email_handler' not in st.session_state:
    st.session_state.email_handler = EmailHandler()

if 'ris_parser' not in st.session_state:
    st.session_state.ris_parser = RISParser()

if 'publications' not in st.session_state:
    st.session_state.publications = []

if 'connected' not in st.session_state:
    st.session_state.connected = False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üî¨ Sci.Net.Node")
    st.markdown(f"*{APP_CONFIG['description']}*")
    st.markdown("---")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    email_handler = st.session_state.email_handler
    ris_parser = st.session_state.ris_parser

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
    folders = []
    if st.session_state.connected:
        folders = email_handler.get_folders()

    # –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
    sidebar = SidebarPanel(st.session_state.publications)

    # –°–µ–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–µ
    connection_data = sidebar.render_connection_section()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if connection_data['connect'] and connection_data['email'] and connection_data['password']:
        with st.spinner("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É..."):
            if email_handler.connect(connection_data['email'], connection_data['password']):
                st.session_state.connected = True
                st.success("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –ø–æ—á—Ç–µ!")
                st.rerun()
            else:
                st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–µ")

    # –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ  
    if st.session_state.connected:

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫
        folders = email_handler.get_folders()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        st.sidebar.success(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω: {email_handler.email}")

        if st.sidebar.button("üîå –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è"):
            email_handler.disconnect()
            st.session_state.connected = False
            st.session_state.publications = []
            st.rerun()

        # –°–µ–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        filters = sidebar.render_filters_section(folders)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Å–µ–º
        if st.sidebar.button("üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Å—å–º–∞", type="primary"):
            load_emails(email_handler, ris_parser, filters)

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∫ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        filtered_publications = apply_filters(st.session_state.publications, filters)

        # –°–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        sidebar.render_analytics_section(filtered_publications)

        # –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å
        main_panel = MainPanel()
        main_panel.render(filtered_publications, email_handler)

    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –Ω–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        show_welcome_screen()

def load_emails(email_handler, ris_parser, filters):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Å–µ–º —Å DOI"""

    try:
        with st.spinner("üìß –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Å–µ–º —Å DOI..."):

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—ã
            date_from = datetime.combine(filters['date_from'], datetime.min.time()) if filters['date_from'] else None
            date_to = datetime.combine(filters['date_to'], datetime.max.time()) if filters['date_to'] else None

            # –ü–æ–ª—É—á–∞–µ–º –ø–∏—Å—å–º–∞
            emails = email_handler.get_emails_with_doi(
                folders=filters['folders'],
                date_from=date_from,
                date_to=date_to
            )

            if not emails:
                st.warning("üì≠ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º —Å DOI –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö –∏ –ø–µ—Ä–∏–æ–¥–µ")
                return

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –ø–∏—Å—å–º–æ
            publications = []
            progress_bar = st.progress(0)

            for i, email in enumerate(emails):
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                progress_bar.progress((i + 1) / len(emails))

                # –ü–∞—Ä—Å–∏–º RIS –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∏—Å—å–º–∞
                ris_data = ris_parser.parse_ris_from_text(email.get('text', ''))

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                pub_info = ris_parser.extract_publication_info(ris_data)

                # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞
                pub_info.update({
                    'folder': email.get('folder', ''),
                    'from': email.get('from', ''),
                    'subject': email.get('subject', ''),
                    'date': email.get('date', ''),
                    'uid': email.get('uid', ''),
                    'text': email.get('text', ''),
                    'html': email.get('html', '')
                })

                # –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É –ø–∏—Å—å–º–∞
                if not pub_info.get('title') and email.get('subject'):
                    pub_info['title'] = email['subject']

                # –ï—Å–ª–∏ –Ω–µ—Ç DOI –∏–∑ RIS, –∏—Å–ø–æ–ª—å–∑—É–µ–º DOI –∏–∑ –ø–∏—Å—å–º–∞
                if not pub_info.get('doi') and email.get('doi'):
                    pub_info['doi'] = email['doi']

                publications.append(pub_info)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏—é
            st.session_state.publications = publications

            progress_bar.empty()
            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(publications)} –ø–∏—Å–µ–º —Å DOI")

    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Å–µ–º: {e}")

def apply_filters(publications, filters):
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º"""

    if not publications:
        return []

    filtered = publications.copy()

    # –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    if filters['types']:
        filtered = [p for p in filtered if p.get('type', '') in filters['types']]

    # –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ–¥—É
    if filters['years']:
        filtered = [p for p in filtered if str(p.get('year', '')) in [str(y) for y in filters['years']]]

    # –§–∏–ª—å—Ç—Ä –ø–æ –∞–≤—Ç–æ—Ä—É
    if filters['author_search']:
        search_term = filters['author_search'].lower()
        filtered = [p for p in filtered 
                   if any(search_term in str(author).lower() 
                         for author in p.get('authors', []))]

    # –§–∏–ª—å—Ç—Ä –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
    if filters['title_search']:
        search_term = filters['title_search'].lower()
        filtered = [p for p in filtered 
                   if search_term in str(p.get('title', '')).lower()]

    # –§–∏–ª—å—Ç—Ä –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    if filters['keywords_search']:
        search_term = filters['keywords_search'].lower()
        filtered = [p for p in filtered 
                   if any(search_term in str(kw).lower() 
                         for kw in p.get('keywords', []))]

    return filtered

def show_welcome_screen():
    """–≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    col1, col2, col3 = st.columns([1, 2, 1])

    with col2:
        st.markdown("""
        <div style="text-align: center; padding: 50px;">
        <h2>üî¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Sci.Net.Node!</h2>
        <p style="font-size: 18px;">–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—É—á–Ω—ã–º–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏ —á–µ—Ä–µ–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É</p>
        </div>
        """, unsafe_allow_html=True)

        st.markdown("""
        ### üöÄ –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:

        1. **üîê –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –ø–æ—á—Ç–µ**
           - –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ —è—â–∏–∫–∞ Mail.ru –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
           - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"

        2. **üìß –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∏—Å—å–º–∞**
           - –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
           - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–∏—Å–∫–∞
           - –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Å—å–º–∞"

        3. **üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã**
           - –§–∏–ª—å—Ç—Ä—É–π—Ç–µ –ø–æ —Ç–∏–ø—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
           - –ò—â–∏—Ç–µ –ø–æ –∞–≤—Ç–æ—Ä–∞–º –∏ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
           - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã

        4. **üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ**
           - –°—Ç—Ä–æ–π—Ç–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —á–∞—Å—Ç–æ—Ç
           - –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∫–æ–Ω—Ü–µ–ø—Ç—ã —á–µ—Ä–µ–∑ OpenAlex
           - –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ RIS/CSV

        5. **üîó –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å Sci.Net.Core**
           - –ó–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
           - –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ
           - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ email
        """)

        st.markdown("---")

        st.info("""
        üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∞:** –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∏ –ø–∏—Å—å–º–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç DOI –ø—É–±–ª–∏–∫–∞—Ü–∏–π. 
        –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ –ø–∏—Å—å–º–∞ —Å –Ω–∞—É—á–Ω—ã–º–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏.
        """)

if __name__ == "__main__":
    main()
